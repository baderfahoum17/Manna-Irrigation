{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/baderf/Desktop/workbench/JavaScript/Manna-Irrigation /manna_viewer/src/components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\n\nfunction Login(props) {\n  _s();\n\n  // const adminUsr = {\n  //   email: \"1140@manna.com\",\n  //   password: \"123456\",\n  // };\n  const URL = \"https://qa.manna-irrigation.com:8443/omer/api/v2/users/login\";\n  const [details, setDetails] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n\n  const fetchApi = async () => {\n    try {\n      const response = await fetch(URL, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: details.email,\n          password: details.password\n        })\n      });\n      return response;\n    } catch (e) {\n      console.log(\"error at fetching phase\");\n    }\n  };\n\n  const logIn = async () => {\n    const response = await fetchApi();\n\n    if (response.status === 200) {\n      const data = await response.json();\n      const user_api_token = data.user_api_token;\n      props.history.push(\"/farmlist\", {\n        apiToken: user_api_token\n      });\n    } else {\n      console.log(response);\n      setError(`Error: ${response.statusText}`);\n    }\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    logIn(details);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"MannaViewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"Enter email\",\n            onChange: event => setDetails({ ...details,\n              email: event.target.value\n            }),\n            value: details.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Enter password\",\n            onChange: event => setDetails({ ...details,\n              password: event.target.value\n            }),\n            value: details.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), error !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"/LP61+/sYfTHqDe69+d/JCRMmsk=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/baderf/Desktop/workbench/JavaScript/Manna-Irrigation /manna_viewer/src/components/Login.jsx"],"names":["React","useState","Login","props","URL","details","setDetails","email","password","error","setError","fetchApi","response","fetch","method","headers","Accept","body","JSON","stringify","e","console","log","logIn","status","data","json","user_api_token","history","push","apiToken","statusText","submitHandler","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport \"./Login.css\";\n\nfunction Login(props) {\n  // const adminUsr = {\n  //   email: \"1140@manna.com\",\n  //   password: \"123456\",\n  // };\n  const URL = \"https://qa.manna-irrigation.com:8443/omer/api/v2/users/login\";\n  const [details, setDetails] = useState({email: \"\", password: \"\"});\n  const [error, setError] = useState(\"\");\n\n  const fetchApi = async () => {\n    try {\n      const response = await fetch(URL, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: details.email,\n          password: details.password,\n        }),\n      });\n\n      return response;\n    } catch (e) {\n      console.log(\"error at fetching phase\");\n    }\n  };\n\n  const logIn = async () => {\n    const response = await fetchApi();\n    if (response.status === 200) {\n      const data = await response.json();\n      const user_api_token = data.user_api_token;\n      props.history.push(\"/farmlist\", {apiToken: user_api_token});\n    } else {\n      console.log(response);\n      setError(`Error: ${response.statusText}`);\n    }\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    logIn(details);\n  };\n\n  return (\n    <div className=\"loginBody\">\n      <h1 className=\"title\">MannaViewer</h1>\n      <form onSubmit={submitHandler}>\n        <div className=\"form-inner\">\n          <h2>Login</h2>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"Enter email\"\n              onChange={(event) =>\n                setDetails({...details, email: event.target.value})\n              }\n              value={details.email}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password: </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Enter password\"\n              onChange={(event) =>\n                setDetails({...details, password: event.target.value})\n              }\n              value={details.password}\n            />\n          </div>\n          {error !== \"\" ? (\n            <div className=\"error\">{error}</div>\n          ) : (\n            <div className=\"error\"></div>\n          )}\n          <input type=\"submit\" value=\"Login\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}