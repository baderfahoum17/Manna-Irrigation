{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/baderf/Desktop/workbench/JavaScript/Manna-Irrigation /manna_viewer/src/components/Farm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Farm.css\";\n\nfunction Farm(props) {\n  _s();\n\n  const [toggle, setToggle] = useState(false);\n  const [fields, setFields] = useState([]);\n  const [loading, setLoading] = useState(flase);\n  const URL = `https://qa.manna-irrigation.com:8443/omer/api/v2/fields?farm_id=${props.farmid}`;\n\n  const fetchFields = async () => {\n    try {\n      console.log(props.token);\n      const myHeaders = new Headers({\n        \"Content-Type\": \"application/json\",\n        \"X-User-Api-Token\": props.token\n      });\n      let response = await fetch(URL, {\n        method: \"GET\",\n        headers: myHeaders\n      });\n\n      if (response.status === 200) {\n        let data = await response.json();\n        setFields(data);\n      }\n    } catch (e) {\n      console.log(\"error with fetching phase at Farm\");\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchFields(props.token);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"farmBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"accordion-btn\",\n        onClick: () => {\n          setToggle(!toggle);\n        },\n        children: [props.name, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent\",\n          children: [\" # Of Fields: \", fields.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: toggle ? `accordionContent show` : `accordionContent`,\n        children: fields.map(field => /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: field.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Farm, \"CLd2hQREyVppF8kUiE9ocATf1ok=\");\n\n_c = Farm;\nexport default Farm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Farm\");","map":{"version":3,"sources":["/Users/baderf/Desktop/workbench/JavaScript/Manna-Irrigation /manna_viewer/src/components/Farm.jsx"],"names":["React","useState","useEffect","Farm","props","toggle","setToggle","fields","setFields","loading","setLoading","flase","URL","farmid","fetchFields","console","log","token","myHeaders","Headers","response","fetch","method","headers","status","data","json","e","name","length","map","field"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,YAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAACU,KAAD,CAAtC;AACA,QAAMC,GAAG,GAAI,mEAAkER,KAAK,CAACS,MAAO,EAA5F;;AACA,QAAMC,WAAW,GAAG,YAAY;AAE9B,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,KAAlB;AACA,YAAMC,SAAS,GAAG,IAAIC,OAAJ,CAAY;AAC5B,wBAAgB,kBADY;AAE5B,4BAAoBf,KAAK,CAACa;AAFE,OAAZ,CAAlB;AAIA,UAAIG,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;AAC9BU,QAAAA,MAAM,EAAE,KADsB;AAE9BC,QAAAA,OAAO,EAAEL;AAFqB,OAAN,CAA1B;;AAKA,UAAIE,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACAlB,QAAAA,SAAS,CAACiB,IAAD,CAAT;AACD;AACF,KAfD,CAeE,OAAOE,CAAP,EAAU;AACVZ,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD;AACF,GApBD;;AAsBAd,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,WAAW,CAACV,KAAK,CAACa,KAAP,CAAX;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbX,UAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,SAJH;AAAA,mBAMGD,KAAK,CAACwB,IANT,eAOE;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA,uCAAwCrB,MAAM,CAACsB,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAExB,MAAM,GAAI,uBAAJ,GAA8B,kBAApD;AAAA,kBACGE,MAAM,CAACuB,GAAP,CAAYC,KAAD,iBACV;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,iCACE;AAAA,sBAAKA,KAAK,CAACH;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAtDQzB,I;;KAAAA,I;AAwDT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./Farm.css\";\n\nfunction Farm(props) {\n  const [toggle, setToggle] = useState(false);\n  const [fields, setFields] = useState([]);\n  const [loading, setLoading] = useState(flase);\n  const URL = `https://qa.manna-irrigation.com:8443/omer/api/v2/fields?farm_id=${props.farmid}`;\n  const fetchFields = async () => {\n    \n    try {\n      console.log(props.token);\n      const myHeaders = new Headers({\n        \"Content-Type\": \"application/json\",\n        \"X-User-Api-Token\": props.token,\n      });\n      let response = await fetch(URL, {\n        method: \"GET\",\n        headers: myHeaders,\n      });\n\n      if (response.status === 200) {\n        let data = await response.json();\n        setFields(data);\n      }\n    } catch (e) {\n      console.log(\"error with fetching phase at Farm\");\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchFields(props.token);\n  }, []);\n\n  return (\n    <div>\n      <div className=\"farmBox\">\n        <button\n          className=\"accordion-btn\"\n          onClick={() => {\n            setToggle(!toggle);\n          }}\n        >\n          {props.name}\n          <span className=\"accent\"> # Of Fields: {fields.length}</span>\n        </button>\n        <div className={toggle ? `accordionContent show` : `accordionContent`}>\n          {fields.map((field) => (\n            <ul className=\"list\">\n              <li>{field.name}</li>\n            </ul>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Farm;\n"]},"metadata":{},"sourceType":"module"}