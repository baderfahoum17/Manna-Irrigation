{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/baderf/Desktop/workbench/JavaScript/Manna-Irrigation /manna_viewer/src/components/FarmList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport \"./FarmList.css\";\nimport Farm from \"./Farm\";\n\nfunction FarmList(props) {\n  _s();\n\n  const apiToken = props.location.state || null;\n  const URL = \"https://qa.manna-irrigation.com:8443/omer/api/v2/farms\";\n  useEffect(() => {\n    if (!apiToken) {\n      props.history.push(\"/\");\n    } else {\n      fetchFarms(apiToken.apiToken);\n    }\n  }, []);\n\n  const fetchFarms = async token => {\n    let response = await fetch(URL, {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Token: token\n      }\n    });\n    response = response.json();\n    console.log(token);\n  };\n\n  const [farmsList, setFarmsList] = useState([{\n    name: \"amjad\",\n    fields: [123123, 123123, \"sdfsdfsdfsd\", \"test,\", \"testasd\"],\n    open: true\n  }, {\n    name: \"asdas\",\n    fields: [\"test\", \"12s\"],\n    open: true\n  }, {\n    name: \"asklndkasjh\",\n    fields: [],\n    open: true\n  }]);\n\n  function toggleFarm(nameid) {\n    // considerrrrr refaaccctooorriiinnnggg this shit\n    let farmsListCopy = [...farmsList];\n\n    for (let i = 0; i < farmsListCopy.length; i++) {\n      if (farmsListCopy[i].name == nameid) {\n        let farmCopy = {\n          open: !farmsListCopy[i].open,\n          name: farmsListCopy[i].name,\n          fields: farmsListCopy[i].fields\n        };\n        farmsListCopy[i] = farmCopy;\n        setFarmsList([...farmsListCopy]);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"farmList\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Farms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"farmList-list\",\n      children: farmsList.map((farm, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Farm, {\n          nameid: farm.name,\n          fields: farm.fields,\n          open: farm.open,\n          toggleFunc: toggleFarm\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FarmList, \"mirhfhUN1G7EZdGskAgUvBoodCg=\");\n\n_c = FarmList;\nexport default FarmList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmList\");","map":{"version":3,"sources":["/Users/baderf/Desktop/workbench/JavaScript/Manna-Irrigation /manna_viewer/src/components/FarmList.jsx"],"names":["React","useState","useEffect","Link","Navbar","Farm","FarmList","props","apiToken","location","state","URL","history","push","fetchFarms","token","response","fetch","method","mode","headers","Accept","Token","json","console","log","farmsList","setFarmsList","name","fields","open","toggleFarm","nameid","farmsListCopy","i","length","farmCopy","map","farm"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport \"./FarmList.css\";\nimport Farm from \"./Farm\";\n\nfunction FarmList(props) {\n  const apiToken = props.location.state || null;\n  const URL = \"https://qa.manna-irrigation.com:8443/omer/api/v2/farms\";\n  useEffect(() => {\n    if (!apiToken) {\n      props.history.push(\"/\");\n    } else {\n      fetchFarms(apiToken.apiToken);\n    }\n  }, []);\n\n  const fetchFarms = async (token) => {\n    let response = await fetch(URL, {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Token: token,\n      },\n    });\n\n    response = response.json();\n    console.log(token);\n  };\n\n  const [farmsList, setFarmsList] = useState([\n    {\n      name: \"amjad\",\n      fields: [123123, 123123, \"sdfsdfsdfsd\", \"test,\", \"testasd\"],\n      open: true,\n    },\n    {\n      name: \"asdas\",\n      fields: [\"test\", \"12s\"],\n      open: true,\n    },\n    {\n      name: \"asklndkasjh\",\n      fields: [],\n      open: true,\n    },\n  ]);\n\n  function toggleFarm(nameid) {\n    // considerrrrr refaaccctooorriiinnnggg this shit\n    let farmsListCopy = [...farmsList];\n    for (let i = 0; i < farmsListCopy.length; i++) {\n      if (farmsListCopy[i].name == nameid) {\n        let farmCopy = {\n          open: !farmsListCopy[i].open,\n          name: farmsListCopy[i].name,\n          fields: farmsListCopy[i].fields,\n        };\n        farmsListCopy[i] = farmCopy;\n        setFarmsList([...farmsListCopy]);\n      }\n    }\n  }\n\n  return (\n    <div className=\"farmList\">\n      <Navbar />\n      <h2>List of Farms</h2>\n      <div className=\"farmList-list\">\n        {farmsList.map((farm, i) => (\n          <div>\n            <Farm\n              key={i}\n              nameid={farm.name}\n              fields={farm.fields}\n              open={farm.open}\n              toggleFunc={toggleFarm}\n            />\n            <br />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FarmList;\n"]},"metadata":{},"sourceType":"module"}